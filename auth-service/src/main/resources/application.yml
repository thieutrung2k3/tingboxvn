server:
  port: 8000
  servlet:
    context-path: /auth

spring:
  application:
    name: auth-service
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 659994326512-ghqppri1ugnt5pcamtnkhed3t1m31n3t.apps.googleusercontent.com
            client-secret: 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
            scope:
              - email
              - profile
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
  datasource:
    url: "jdbc:postgresql://localhost:5432/02-auth-service-tingboxvn"
    username: postgres
    password: postgres
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true

  kafka:
    bootstrap-servers: localhost:9094
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

  redis:
    host: localhost
    port: 6379
    database: 0
    jedis:
      pool:
        max-active: 20
        max-idle: 8
        min-idle: 0
    timeout: 2000ms

  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

cache:
  redis:
    ttl: 1800 # 30 minutes

logging:
  level:
    org.kir.cache: DEBUG

app:
  CHARACTERS: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_"

jwt:
  private-key: "eHr30nG1PQoaJ6JucIPuRKmxyyOcMPs3hHNDaiSrqXKZiC5HneVjmiMxw12EE8eH"
  valid-duration: 3600
  refresh-duration: 36000

springdoc:
  api-docs:
    path: /v3/api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: alpha
    enabled: true

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-second: 10
    lease-expiration-duration-in-seconds: 30
